@page "/newpage"
@using Fitness_Tracker_App.Data
@using Fitness_Tracker_App
@inject Data.DataService Data
@using FitnessWebApp.Pages.entities

<h1>MyPracticePage</h1>
<h3>We have @Data.Users.Count People in the List</h3>
<h2>This page is for practising all my code</h2>
Today is @_Date
<br />
Hello @_firstName please choose a _ChestExerciseName:
<input @bind="_firstName" />
<input type="Date" @bind="_Date" />

<button class="btn btn-primary" @onclick="CreateUser">Create User</button>
<p>hello, @name.ToUpper()</p>
<p>lets add 2 + 2 = @(2 + 2 )</p>

<button @onclick="@(() => Console.WriteLine("i've been clicked!"))">click me</button>
// or

<button @onclick="@WriteInlog">click me </button>

@*<input @bind="_ChestExerciseName" />
    <button class="btn btn-primary" @onclick="ChestExercises">Choose Chest Exercise</button>*@

@*<input @bind="_exerciseName" />
    <button class="btn btn-primary" @onclick="ExerciseChoice">Choose Chest Exercise</button>*@


<SurveyPrompt Title="This is a cool title"></SurveyPrompt>
<SurveyPrompt Title="This is another title! =)"></SurveyPrompt>


@*<SfDropDownList TItem="ChestExerciseName" TValue="string" DataSource="chestExercises"></SfDropDownList>

    <DropDownListFieldSettings Text="Name"></DropDownListFieldSettings>*@

@*<div>
    <h3>Movie</h3>
    @foreach (var movie in movies)
    {
        <p>Title: <b>@movie.Title</b></p>
        <p>Release Date: <b>@movie.ReleaseDate.ToString("dd MMM yyyy")</b></p>
    }
</div>*@

@for (var i = 0; i < movies.Count; i++)
{
    <div style="background-color: @(i % 2 == 0 ? "blue" : "red")">
        <p>@(i+1))Title: <b>@movies[i].Title</b></p>
        <p>Release Date: <b>@movies[i].ReleaseDate.ToString("dd MMM yyyy")</b></p>
    </div>
}





@code {
    string name = "ja cameron";

    void WriteInlog()
    {
        Console.WriteLine("i've been clicked (from method)");
    }

    List<Movie> movies;

    protected override void OnInitialized()
    {
        movies = new List<Movie>()
{
            new Movie(){Title = "Spider-man: far from home", ReleaseDate = new DateTime(2019, 7, 2)},
            new Movie(){Title = "Moana", ReleaseDate = new DateTime(2016, 11 ,23)},
            new Movie(){Title = "Inception", ReleaseDate = new DateTime(2010, 7 ,16)},
        };
    }




    Movie spiderman = new()
    {
        Title = "Spider-Man: Far from Home",
        ReleaseDate = new DateTime(2019, 7, 2),
    };

    //public class ChestExerciseName
    //{
    //    public string Name { get; set; }
    //}
    //List<ChestExerciseName> chestExercises = new List<ChestExerciseName>
    //{
    //new ChestExerciseName() { Name = "Barbell Bench Press"},
    //new ChestExerciseName() { Name = "InclineBarbellBench"},
    //new ChestExerciseName() { Name = "CableFlyes"},
    //new ChestExerciseName() { Name = "DeclineBarbellBench"},
    //new ChestExerciseName() { Name = "DumbbellFlyes"},
    //new ChestExerciseName() { Name = "PecDec"},
    //new ChestExerciseName() { Name = "CableCrossover"},

    //};





    private DateTime _Date = DateTime.Now;

    public DateTime Date
    {
        get { return _Date; }
        set { _Date = value; }
    }

    private string _firstName = "John";

    public void CreateUser()
    {
        var u = new User();
        u.DOB = Date;
        u.FirstName = _firstName;

        Data.AddUser(u);
    }
    //private enum  _ChestExerciseName; // thinking this should be a list but unsure of how to input it?
    ////private List<ChestExerciseName> = _ChestExerciseName(); tried using list here

    //public void ChestExercises()
    //{
    //    var chest = new ChestExerciseName();

    //    chest = _ChestExerciseName; // tried to put multiple options in here as an identifier but none seem to be working

    //    Data.AddChestExercise(chest);


    //}
    private string _exerciseName;
    public void ExerciseChoice()
    {
        var ec = new Exercise();
        ec.ExerciseName = _exerciseName;

        Data.chestExerciseNames.Count();
    }


}
