@page "/newpage"
@using Fitness_Tracker_App.Data
@using Fitness_Tracker_App
@inject Data.DataService Data
@using FitnessWebApp.Pages.entities

<h1>MyPracticePage</h1>
<br />
<!--<h3>We have @Data.Users.Count People in the List</h3>
<h2>This page is for practising all my code</h2>
Today is @_Date
<br />
Hello @_firstName please choose a Chest Exercise:-->
@*<button class="btn btn-primary" @onclick="ChestExerciseName">Chest Exercise</button>*@
<!--<input @bind="_firstName" />
<input type="Date" @bind="_Date" />

<button class="btn btn-primary" @onclick="CreateUser">Create User</button>
<p>hello, @name.ToUpper()</p>
<p>lets add 2 + 2 = @(2 + 2 )</p>

<button @onclick="@(() => Console.WriteLine("i've been clicked!"))">click me</button>
// or

<button @onclick="@WriteInlog">click me </button>

<div>
    <h3>Movies:</h3>
    <MoviesList Movies="movies" />
</div>

<p></p>-->

<h1>@currentHeading</h1>

<p>
    <label>
        New title
        <input @bind="newHeading" />
    </label>
    <button @onclick="UpdateHeading">Update heading </button>

</p>

<p>
    <label>
        <input type="checkbox" @onchange="CheckChanged" />
        @checkedMessage
    </label>
</p>



<h1>@currentHeading1</h1>

<p>
    <label>
        New title
        <input @bind="newHeading1" />
    </label>
    <button @onclick="UpdateHeading1"> Update heading </button>
</p>

<br />

<h3>Mouse Coordinates</h3>
<button class="btn btn-primary" @onclick="MouseClick">Button 1</button>

<br />
<br />

<button class="btn btn-primary" @onclick="MouseClick">Button 2</button>

<p>@mouseCoordinates</p>







@code {
    //    private List<Movie> movies;
    //    protected override void OnInitialized()
    //    {
    //        movies = new List<Movie>()
    //{
    //            new Movie(){Title = "Spider-man: far from home", ReleaseDate = new DateTime(2019, 7, 2)},
    //            new Movie(){Title = "Moana", ReleaseDate = new DateTime(2016, 11 ,23)},
    //            new Movie(){Title = "Inception", ReleaseDate = new DateTime(2010, 7 ,16)},
    //        };
    //    }
    //    string name = "ja cameron";

    //    void WriteInlog()
    //    {
    //        Console.WriteLine("i've been clicked (from method)");
    //    }


    //    public class ChestExerciseName
    //    {
    //        public string Name { get; set; }
    //    }
    //    //public void ChestExerciseName();
    //    List<ChestExerciseName> chestExercises = new List<ChestExerciseName>
    //{
    //    new ChestExerciseName() { Name = "Barbell Bench Press"},
    //    new ChestExerciseName() { Name = "InclineBarbellBench"},
    //    new ChestExerciseName() { Name = "CableFlyes"},
    //    new ChestExerciseName() { Name = "DeclineBarbellBench"},
    //    new ChestExerciseName() { Name = "DumbbellFlyes"},
    //    new ChestExerciseName() { Name = "PecDec"},
    //    new ChestExerciseName() { Name = "CableCrossover"},

    //    };

    //private DateTime _Date = DateTime.Now;

    //public DateTime Date
    //{
    //    get { return _Date; }
    //    set { _Date = value; }
    //}

    //private string _firstName = "John";

    //public void CreateUser()
    //{
    //    var u = new User();
    //    u.DOB = Date;
    //    u.FirstName = _firstName;

    //    Data.AddUser(u);
    //}


    ////}
    //private string _exerciseName;
    //public void ExerciseChoice()
    //{
    //    var ec = new Exercise();
    //    ec.ExerciseName = _exerciseName;

    //}

    /// <summary>
    /// 1st event example
    /// </summary>
    private string currentHeading = "Event Change Test heading";
    private string newHeading;
    private string checkedMessage = "Not changed yet";

    private void UpdateHeading()
    {
        currentHeading = $"{newHeading}";
    }

    private void CheckChanged()
    {
        /// shows when the event was changed last
        checkedMessage = $"Last changed at {DateTime.Now}";
    }




    /// <summary>
    /// 2nd event example
    /// </summary>

    private string currentHeading1 = "Event Change Test heading";
    private string newHeading1;

    private async Task UpdateHeading1()
    {
        ///waits 2 seconds before making change
        await Task.Delay(2000);

        currentHeading1 = $"{newHeading1}";
    }


    /// <summary>
    /// 3rd event example!
    /// </summary>
    private string mouseCoordinates;

    private void MouseClick(MouseEventArgs e)
    {
        //prints out position of the mouse over the click button
        mouseCoordinates = $"Mouse coordinates: {e.ScreenX}:{e.ScreenY}";
    }
   









}
