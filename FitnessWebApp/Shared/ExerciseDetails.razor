@inject Data.DataService Data
@using Fitness_Tracker_App.Data

<html>
<body style="background-color:black;"
      body/>
</html>
<!-- Gets the details (reps/sets/etc) specific to one exercise (i.e. bench press)-->
<div style="border: thin solid black; margin: 5px">
    <h3>@BodyPart</h3>



    <select input typeof="string" @bind="_selectedName">

        <option value="null">Please Select</option>
        @foreach (var exerciseName in ExerciseNames)
        {
            <option>@exerciseName</option>

        }

        @*<option ImagePath2="null"></option>*@


    </select>
    <br />

<p style="color:white">
    <table style="width:100%">
        <tr>
            <th>Reps:</th>
            <th> <input type="number" @bind="_numberReps" @oninput="UpdateTrainingDayDetails" /></th>

            
            <th>Sets:</th> 
           <th> <input type="number" @bind="_numberSets" @oninput="UpdateTrainingDayDetails" /></th>
            
            <th>Weight in kg's:</th> 
            <th><input type="number" @bind="_weights" @oninput="UpdateTrainingDayDetails" /></th>
        </tr>
    </table>
</p>
    <div  class="container">
        <img src="@ImagePath" width="500" height="200" />

        @if (ImagePath2 != null)
        {
            <img src="@ImagePath2" width="500" height="200" />
        }



    </div>


    @*<input @onchange="AddWorkout" />*@
    @*<input @onchange="AddWorkout" />*@

    @*<input @onchange="UpdateTrainingDayDetails" />*@


    @*<input @bind-value:event="onchange" @oninput="UpdateTrainingDayDetails"
           @bind-value="SelectedWorkout" />*@

    @*<input @bind-value:event="onchange" @oninput="AddWorkout"
        @bind-value="SelectedWorkout" />*@

    @*<button class="btn btn-primary" @onclick="UpdateTrainingDayDetails">update</button>
        <button class="btn btn-primary" @onclick="AddWorkout">Add Workout</button>*@

</div>



@code {
    [Parameter]
    public String BodyPart { get; set; }
    [Parameter]
    public List<String> ExerciseNames{ get; set; }
    [Parameter]
    public string ImagePath { get; set; }
    [Parameter]
    public string ImagePath2 { get; set; }
    [Parameter]
    public Workout SelectedWorkout { get; set; }
    [Parameter]
    public EventCallback<Workout> SelectedWorkoutChanged { get; set; }


    async Task UpdateTrainingDayDetails()
    {
        SelectedWorkout = new();
        SelectedWorkout.ExerciseName = _selectedName;
        SelectedWorkout.AmountOfReps = _numberReps;
        SelectedWorkout.AmountOfSets = _numberSets;
        SelectedWorkout.Weight = _weights;
        await SelectedWorkoutChanged.InvokeAsync(SelectedWorkout);


    }


    public string _selectedName;
    public int _numberReps;
    public int _numberSets;
    public int _weights;
    public string _ExerciseNames;


    //public void AddWorkout()
    //{
    //    var aWorkout = new Workout();
    //    aWorkout.ExerciseName = _selectedName;
    //    aWorkout.AmountOfReps = _numberReps;
    //    aWorkout.AmountOfSets = _numberSets;
    //    aWorkout.Weight = _weights;

    //    Data.AddNewWorkout(aWorkout);
    //}





}
