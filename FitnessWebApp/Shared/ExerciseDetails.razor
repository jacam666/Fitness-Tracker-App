@inject Data.DataService Data
@using Fitness_Tracker_App.Data

<!-- Gets the details (reps/sets/etc) specific to one exercise (i.e. bench press)-->
<div style="border: thin solid black; margin: 5px">
    <h3>@BodyPart</h3>



    <select input typeof="string" @bind="_selectedName">

        <option value="null">Please Select</option>
        @foreach (var exerciseName in ExerciseNames)
        {
            <option>@exerciseName</option>

        }

        @*<option ImagePath2="null"></option>*@


    </select>
    <br />
    Reps:
    <input type="number" @bind="_numberReps"/>
    <br />
    Sets:
    <input type="number" @bind="_numberSets" />
    <br />
    Weight in kg's:
    <input type="number" @bind="_weights" />
    <div class="container">
        <img src="@ImagePath" width="500" height="200" />

        @if (ImagePath2 != null)
        {
            <img src="@ImagePath2" width="500" height="200" />
        }

    </div>

    <button @onclick="AddWorkout">Add Workout</button>
    <button @onclick="UpdateTrainingDayDetails">Update Training Day Details</button>
</div>
@code {
    [Parameter]
    public String BodyPart { get; set; }
    [Parameter]
    public List<String> ExerciseNames{ get; set; }
    [Parameter]
    public string ImagePath { get; set; }
    [Parameter]
    public string ImagePath2 { get; set; }
    [Parameter]
    public Workout SelectedWorkout { get; set; }
    [Parameter]
    public EventCallback<Workout> SelectedWorkoutChanged { get; set; }


    async Task UpdateTrainingDayDetails()
    {
        SelectedWorkout = new();
        SelectedWorkout.ExerciseName = _selectedName;
        SelectedWorkout.AmountOfReps = _numberReps;
        SelectedWorkout.AmountOfSets = _numberSets;
        SelectedWorkout.Weight = _weights;
        await SelectedWorkoutChanged.InvokeAsync(SelectedWorkout);


    }


    public string _selectedName;
    public int _numberReps;
    public int _numberSets;
    public int _weights;
    public string _ExerciseNames;


    public void AddWorkout()
    {
        var aWorkout = new Workout();
        aWorkout.ExerciseName = _selectedName;
        aWorkout.AmountOfReps = _numberReps;
        aWorkout.AmountOfSets = _numberSets;
        aWorkout.Weight = _weights;

        Data.AddNewWorkout(aWorkout);
    }





}
